{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"fieldNames\", \"defaultValue\", \"value\", \"changeOnSelect\", \"onChange\", \"displayRender\", \"checkable\", \"autoClearSearchValue\", \"searchValue\", \"onSearch\", \"showSearch\", \"expandTrigger\", \"options\", \"dropdownPrefixCls\", \"loadData\", \"popupVisible\", \"open\", \"popupClassName\", \"dropdownClassName\", \"dropdownMenuColumnStyle\", \"popupPlacement\", \"placement\", \"onDropdownVisibleChange\", \"onPopupVisibleChange\", \"expandIcon\", \"loadingIcon\", \"children\", \"dropdownMatchSelectWidth\", \"showCheckedStrategy\"];\nimport { BaseSelect } from 'rc-select';\nimport useId from \"rc-select/es/hooks/useId\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport CascaderContext from \"./context\";\nimport useDisplayValues from \"./hooks/useDisplayValues\";\nimport useMissingValues from \"./hooks/useMissingValues\";\nimport useOptions from \"./hooks/useOptions\";\nimport useSearchConfig from \"./hooks/useSearchConfig\";\nimport useSearchOptions from \"./hooks/useSearchOptions\";\nimport useSelect from \"./hooks/useSelect\";\nimport useValues from \"./hooks/useValues\";\nimport OptionList from \"./OptionList\";\nimport Panel from \"./Panel\";\nimport { fillFieldNames, SHOW_CHILD, SHOW_PARENT, toPathKeys, toRawValues } from \"./utils/commonUtil\";\nimport { formatStrategyValues, toPathOptions } from \"./utils/treeUtil\";\nimport warningProps, { warningNullOptions } from \"./utils/warningPropsUtil\";\nvar Cascader = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n      _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-cascader' : _props$prefixCls,\n      fieldNames = props.fieldNames,\n      defaultValue = props.defaultValue,\n      value = props.value,\n      changeOnSelect = props.changeOnSelect,\n      onChange = props.onChange,\n      displayRender = props.displayRender,\n      checkable = props.checkable,\n      _props$autoClearSearc = props.autoClearSearchValue,\n      autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n      searchValue = props.searchValue,\n      onSearch = props.onSearch,\n      showSearch = props.showSearch,\n      expandTrigger = props.expandTrigger,\n      options = props.options,\n      dropdownPrefixCls = props.dropdownPrefixCls,\n      loadData = props.loadData,\n      popupVisible = props.popupVisible,\n      open = props.open,\n      popupClassName = props.popupClassName,\n      dropdownClassName = props.dropdownClassName,\n      dropdownMenuColumnStyle = props.dropdownMenuColumnStyle,\n      popupPlacement = props.popupPlacement,\n      placement = props.placement,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      onPopupVisibleChange = props.onPopupVisibleChange,\n      _props$expandIcon = props.expandIcon,\n      expandIcon = _props$expandIcon === void 0 ? '>' : _props$expandIcon,\n      loadingIcon = props.loadingIcon,\n      children = props.children,\n      _props$dropdownMatchS = props.dropdownMatchSelectWidth,\n      dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? false : _props$dropdownMatchS,\n      _props$showCheckedStr = props.showCheckedStrategy,\n      showCheckedStrategy = _props$showCheckedStr === void 0 ? SHOW_PARENT : _props$showCheckedStr,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var mergedId = useId(id);\n  var multiple = !!checkable; // =========================== Values ===========================\n\n  var _useMergedState = useMergedState(defaultValue, {\n    value: value,\n    postState: toRawValues\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      rawValues = _useMergedState2[0],\n      setRawValues = _useMergedState2[1]; // ========================= FieldNames =========================\n\n\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames);\n  },\n  /* eslint-disable react-hooks/exhaustive-deps */\n  [JSON.stringify(fieldNames)]\n  /* eslint-enable react-hooks/exhaustive-deps */\n  ); // =========================== Option ===========================\n\n  var _useOptions = useOptions(mergedFieldNames, options),\n      _useOptions2 = _slicedToArray(_useOptions, 3),\n      mergedOptions = _useOptions2[0],\n      getPathKeyEntities = _useOptions2[1],\n      getValueByKeyPath = _useOptions2[2]; // =========================== Search ===========================\n\n\n  var _useMergedState3 = useMergedState('', {\n    value: searchValue,\n    postState: function postState(search) {\n      return search || '';\n    }\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      mergedSearchValue = _useMergedState4[0],\n      setSearchValue = _useMergedState4[1];\n\n  var onInternalSearch = function onInternalSearch(searchText, info) {\n    setSearchValue(searchText);\n\n    if (info.source !== 'blur' && onSearch) {\n      onSearch(searchText);\n    }\n  };\n\n  var _useSearchConfig = useSearchConfig(showSearch),\n      _useSearchConfig2 = _slicedToArray(_useSearchConfig, 2),\n      mergedShowSearch = _useSearchConfig2[0],\n      searchConfig = _useSearchConfig2[1];\n\n  var searchOptions = useSearchOptions(mergedSearchValue, mergedOptions, mergedFieldNames, dropdownPrefixCls || prefixCls, searchConfig, changeOnSelect); // =========================== Values ===========================\n\n  var getMissingValues = useMissingValues(mergedOptions, mergedFieldNames); // Fill `rawValues` with checked conduction values\n\n  var _useValues = useValues(multiple, rawValues, getPathKeyEntities, getValueByKeyPath, getMissingValues),\n      _useValues2 = _slicedToArray(_useValues, 3),\n      checkedValues = _useValues2[0],\n      halfCheckedValues = _useValues2[1],\n      missingCheckedValues = _useValues2[2];\n\n  var deDuplicatedValues = React.useMemo(function () {\n    var checkedKeys = toPathKeys(checkedValues);\n    var deduplicateKeys = formatStrategyValues(checkedKeys, getPathKeyEntities, showCheckedStrategy);\n    return [].concat(_toConsumableArray(missingCheckedValues), _toConsumableArray(getValueByKeyPath(deduplicateKeys)));\n  }, [checkedValues, getPathKeyEntities, getValueByKeyPath, missingCheckedValues, showCheckedStrategy]);\n  var displayValues = useDisplayValues(deDuplicatedValues, mergedOptions, mergedFieldNames, multiple, displayRender); // =========================== Change ===========================\n\n  var triggerChange = useEvent(function (nextValues) {\n    setRawValues(nextValues); // Save perf if no need trigger event\n\n    if (onChange) {\n      var nextRawValues = toRawValues(nextValues);\n      var valueOptions = nextRawValues.map(function (valueCells) {\n        return toPathOptions(valueCells, mergedOptions, mergedFieldNames).map(function (valueOpt) {\n          return valueOpt.option;\n        });\n      });\n      var triggerValues = multiple ? nextRawValues : nextRawValues[0];\n      var triggerOptions = multiple ? valueOptions : valueOptions[0];\n      onChange(triggerValues, triggerOptions);\n    }\n  }); // =========================== Select ===========================\n\n  var handleSelection = useSelect(multiple, triggerChange, checkedValues, halfCheckedValues, missingCheckedValues, getPathKeyEntities, getValueByKeyPath, showCheckedStrategy);\n  var onInternalSelect = useEvent(function (valuePath) {\n    if (!multiple || autoClearSearchValue) {\n      setSearchValue('');\n    }\n\n    handleSelection(valuePath);\n  }); // Display Value change logic\n\n  var onDisplayValuesChange = function onDisplayValuesChange(_, info) {\n    if (info.type === 'clear') {\n      triggerChange([]);\n      return;\n    } // Cascader do not support `add` type. Only support `remove`\n\n\n    var _ref = info.values[0],\n        valueCells = _ref.valueCells;\n    onInternalSelect(valueCells);\n  }; // ============================ Open ============================\n\n\n  var mergedOpen = open !== undefined ? open : popupVisible;\n  var mergedDropdownClassName = dropdownClassName || popupClassName;\n  var mergedPlacement = placement || popupPlacement;\n\n  var onInternalDropdownVisibleChange = function onInternalDropdownVisibleChange(nextVisible) {\n    onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextVisible);\n    onPopupVisibleChange === null || onPopupVisibleChange === void 0 ? void 0 : onPopupVisibleChange(nextVisible);\n  }; // ========================== Warning ===========================\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    warningProps(props);\n    warningNullOptions(mergedOptions, mergedFieldNames);\n  } // ========================== Context ===========================\n\n\n  var cascaderContext = React.useMemo(function () {\n    return {\n      options: mergedOptions,\n      fieldNames: mergedFieldNames,\n      values: checkedValues,\n      halfValues: halfCheckedValues,\n      changeOnSelect: changeOnSelect,\n      onSelect: onInternalSelect,\n      checkable: checkable,\n      searchOptions: searchOptions,\n      dropdownPrefixCls: dropdownPrefixCls,\n      loadData: loadData,\n      expandTrigger: expandTrigger,\n      expandIcon: expandIcon,\n      loadingIcon: loadingIcon,\n      dropdownMenuColumnStyle: dropdownMenuColumnStyle\n    };\n  }, [mergedOptions, mergedFieldNames, checkedValues, halfCheckedValues, changeOnSelect, onInternalSelect, checkable, searchOptions, dropdownPrefixCls, loadData, expandTrigger, expandIcon, loadingIcon, dropdownMenuColumnStyle]); // ==============================================================\n  // ==                          Render                          ==\n  // ==============================================================\n\n  var emptyOptions = !(mergedSearchValue ? searchOptions : mergedOptions).length;\n  var dropdownStyle = // Search to match width\n  mergedSearchValue && searchConfig.matchInputWidth || // Empty keep the width\n  emptyOptions ? {} : {\n    minWidth: 'auto'\n  };\n  return /*#__PURE__*/React.createElement(CascaderContext.Provider, {\n    value: cascaderContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({}, restProps, {\n    // MISC\n    ref: ref,\n    id: mergedId,\n    prefixCls: prefixCls,\n    autoClearSearchValue: autoClearSearchValue,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownStyle: dropdownStyle // Value\n    ,\n    displayValues: displayValues,\n    onDisplayValuesChange: onDisplayValuesChange,\n    mode: multiple ? 'multiple' : undefined // Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    showSearch: mergedShowSearch // Options\n    ,\n    OptionList: OptionList,\n    emptyOptions: emptyOptions // Open\n    ,\n    open: mergedOpen,\n    dropdownClassName: mergedDropdownClassName,\n    placement: mergedPlacement,\n    onDropdownVisibleChange: onInternalDropdownVisibleChange // Children\n    ,\n    getRawInputElement: function getRawInputElement() {\n      return children;\n    }\n  })));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Cascader.displayName = 'Cascader';\n}\n\nCascader.SHOW_PARENT = SHOW_PARENT;\nCascader.SHOW_CHILD = SHOW_CHILD;\nCascader.Panel = Panel;\nexport default Cascader;","map":{"version":3,"sources":["/Users/yunxinghe/Desktop/快手/client/node_modules/rc-cascader/es/Cascader.js"],"names":["_extends","_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","BaseSelect","useId","useEvent","useMergedState","React","CascaderContext","useDisplayValues","useMissingValues","useOptions","useSearchConfig","useSearchOptions","useSelect","useValues","OptionList","Panel","fillFieldNames","SHOW_CHILD","SHOW_PARENT","toPathKeys","toRawValues","formatStrategyValues","toPathOptions","warningProps","warningNullOptions","Cascader","forwardRef","props","ref","id","_props$prefixCls","prefixCls","fieldNames","defaultValue","value","changeOnSelect","onChange","displayRender","checkable","_props$autoClearSearc","autoClearSearchValue","searchValue","onSearch","showSearch","expandTrigger","options","dropdownPrefixCls","loadData","popupVisible","open","popupClassName","dropdownClassName","dropdownMenuColumnStyle","popupPlacement","placement","onDropdownVisibleChange","onPopupVisibleChange","_props$expandIcon","expandIcon","loadingIcon","children","_props$dropdownMatchS","dropdownMatchSelectWidth","_props$showCheckedStr","showCheckedStrategy","restProps","mergedId","multiple","_useMergedState","postState","_useMergedState2","rawValues","setRawValues","mergedFieldNames","useMemo","JSON","stringify","_useOptions","_useOptions2","mergedOptions","getPathKeyEntities","getValueByKeyPath","_useMergedState3","search","_useMergedState4","mergedSearchValue","setSearchValue","onInternalSearch","searchText","info","source","_useSearchConfig","_useSearchConfig2","mergedShowSearch","searchConfig","searchOptions","getMissingValues","_useValues","_useValues2","checkedValues","halfCheckedValues","missingCheckedValues","deDuplicatedValues","checkedKeys","deduplicateKeys","concat","displayValues","triggerChange","nextValues","nextRawValues","valueOptions","map","valueCells","valueOpt","option","triggerValues","triggerOptions","handleSelection","onInternalSelect","valuePath","onDisplayValuesChange","_","type","_ref","values","mergedOpen","undefined","mergedDropdownClassName","mergedPlacement","onInternalDropdownVisibleChange","nextVisible","process","env","NODE_ENV","cascaderContext","halfValues","onSelect","emptyOptions","length","dropdownStyle","matchInputWidth","minWidth","createElement","Provider","mode","getRawInputElement","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"fieldNames\", \"defaultValue\", \"value\", \"changeOnSelect\", \"onChange\", \"displayRender\", \"checkable\", \"autoClearSearchValue\", \"searchValue\", \"onSearch\", \"showSearch\", \"expandTrigger\", \"options\", \"dropdownPrefixCls\", \"loadData\", \"popupVisible\", \"open\", \"popupClassName\", \"dropdownClassName\", \"dropdownMenuColumnStyle\", \"popupPlacement\", \"placement\", \"onDropdownVisibleChange\", \"onPopupVisibleChange\", \"expandIcon\", \"loadingIcon\", \"children\", \"dropdownMatchSelectWidth\", \"showCheckedStrategy\"];\nimport { BaseSelect } from 'rc-select';\nimport useId from \"rc-select/es/hooks/useId\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport CascaderContext from \"./context\";\nimport useDisplayValues from \"./hooks/useDisplayValues\";\nimport useMissingValues from \"./hooks/useMissingValues\";\nimport useOptions from \"./hooks/useOptions\";\nimport useSearchConfig from \"./hooks/useSearchConfig\";\nimport useSearchOptions from \"./hooks/useSearchOptions\";\nimport useSelect from \"./hooks/useSelect\";\nimport useValues from \"./hooks/useValues\";\nimport OptionList from \"./OptionList\";\nimport Panel from \"./Panel\";\nimport { fillFieldNames, SHOW_CHILD, SHOW_PARENT, toPathKeys, toRawValues } from \"./utils/commonUtil\";\nimport { formatStrategyValues, toPathOptions } from \"./utils/treeUtil\";\nimport warningProps, { warningNullOptions } from \"./utils/warningPropsUtil\";\nvar Cascader = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n    _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-cascader' : _props$prefixCls,\n    fieldNames = props.fieldNames,\n    defaultValue = props.defaultValue,\n    value = props.value,\n    changeOnSelect = props.changeOnSelect,\n    onChange = props.onChange,\n    displayRender = props.displayRender,\n    checkable = props.checkable,\n    _props$autoClearSearc = props.autoClearSearchValue,\n    autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n    searchValue = props.searchValue,\n    onSearch = props.onSearch,\n    showSearch = props.showSearch,\n    expandTrigger = props.expandTrigger,\n    options = props.options,\n    dropdownPrefixCls = props.dropdownPrefixCls,\n    loadData = props.loadData,\n    popupVisible = props.popupVisible,\n    open = props.open,\n    popupClassName = props.popupClassName,\n    dropdownClassName = props.dropdownClassName,\n    dropdownMenuColumnStyle = props.dropdownMenuColumnStyle,\n    popupPlacement = props.popupPlacement,\n    placement = props.placement,\n    onDropdownVisibleChange = props.onDropdownVisibleChange,\n    onPopupVisibleChange = props.onPopupVisibleChange,\n    _props$expandIcon = props.expandIcon,\n    expandIcon = _props$expandIcon === void 0 ? '>' : _props$expandIcon,\n    loadingIcon = props.loadingIcon,\n    children = props.children,\n    _props$dropdownMatchS = props.dropdownMatchSelectWidth,\n    dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? false : _props$dropdownMatchS,\n    _props$showCheckedStr = props.showCheckedStrategy,\n    showCheckedStrategy = _props$showCheckedStr === void 0 ? SHOW_PARENT : _props$showCheckedStr,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var mergedId = useId(id);\n  var multiple = !!checkable;\n\n  // =========================== Values ===========================\n  var _useMergedState = useMergedState(defaultValue, {\n      value: value,\n      postState: toRawValues\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    rawValues = _useMergedState2[0],\n    setRawValues = _useMergedState2[1];\n\n  // ========================= FieldNames =========================\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames);\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [JSON.stringify(fieldNames)]\n  /* eslint-enable react-hooks/exhaustive-deps */);\n\n  // =========================== Option ===========================\n  var _useOptions = useOptions(mergedFieldNames, options),\n    _useOptions2 = _slicedToArray(_useOptions, 3),\n    mergedOptions = _useOptions2[0],\n    getPathKeyEntities = _useOptions2[1],\n    getValueByKeyPath = _useOptions2[2];\n\n  // =========================== Search ===========================\n  var _useMergedState3 = useMergedState('', {\n      value: searchValue,\n      postState: function postState(search) {\n        return search || '';\n      }\n    }),\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n    mergedSearchValue = _useMergedState4[0],\n    setSearchValue = _useMergedState4[1];\n  var onInternalSearch = function onInternalSearch(searchText, info) {\n    setSearchValue(searchText);\n    if (info.source !== 'blur' && onSearch) {\n      onSearch(searchText);\n    }\n  };\n  var _useSearchConfig = useSearchConfig(showSearch),\n    _useSearchConfig2 = _slicedToArray(_useSearchConfig, 2),\n    mergedShowSearch = _useSearchConfig2[0],\n    searchConfig = _useSearchConfig2[1];\n  var searchOptions = useSearchOptions(mergedSearchValue, mergedOptions, mergedFieldNames, dropdownPrefixCls || prefixCls, searchConfig, changeOnSelect);\n\n  // =========================== Values ===========================\n  var getMissingValues = useMissingValues(mergedOptions, mergedFieldNames);\n\n  // Fill `rawValues` with checked conduction values\n  var _useValues = useValues(multiple, rawValues, getPathKeyEntities, getValueByKeyPath, getMissingValues),\n    _useValues2 = _slicedToArray(_useValues, 3),\n    checkedValues = _useValues2[0],\n    halfCheckedValues = _useValues2[1],\n    missingCheckedValues = _useValues2[2];\n  var deDuplicatedValues = React.useMemo(function () {\n    var checkedKeys = toPathKeys(checkedValues);\n    var deduplicateKeys = formatStrategyValues(checkedKeys, getPathKeyEntities, showCheckedStrategy);\n    return [].concat(_toConsumableArray(missingCheckedValues), _toConsumableArray(getValueByKeyPath(deduplicateKeys)));\n  }, [checkedValues, getPathKeyEntities, getValueByKeyPath, missingCheckedValues, showCheckedStrategy]);\n  var displayValues = useDisplayValues(deDuplicatedValues, mergedOptions, mergedFieldNames, multiple, displayRender);\n\n  // =========================== Change ===========================\n  var triggerChange = useEvent(function (nextValues) {\n    setRawValues(nextValues);\n\n    // Save perf if no need trigger event\n    if (onChange) {\n      var nextRawValues = toRawValues(nextValues);\n      var valueOptions = nextRawValues.map(function (valueCells) {\n        return toPathOptions(valueCells, mergedOptions, mergedFieldNames).map(function (valueOpt) {\n          return valueOpt.option;\n        });\n      });\n      var triggerValues = multiple ? nextRawValues : nextRawValues[0];\n      var triggerOptions = multiple ? valueOptions : valueOptions[0];\n      onChange(triggerValues, triggerOptions);\n    }\n  });\n\n  // =========================== Select ===========================\n  var handleSelection = useSelect(multiple, triggerChange, checkedValues, halfCheckedValues, missingCheckedValues, getPathKeyEntities, getValueByKeyPath, showCheckedStrategy);\n  var onInternalSelect = useEvent(function (valuePath) {\n    if (!multiple || autoClearSearchValue) {\n      setSearchValue('');\n    }\n    handleSelection(valuePath);\n  });\n\n  // Display Value change logic\n  var onDisplayValuesChange = function onDisplayValuesChange(_, info) {\n    if (info.type === 'clear') {\n      triggerChange([]);\n      return;\n    }\n\n    // Cascader do not support `add` type. Only support `remove`\n    var _ref = info.values[0],\n      valueCells = _ref.valueCells;\n    onInternalSelect(valueCells);\n  };\n\n  // ============================ Open ============================\n  var mergedOpen = open !== undefined ? open : popupVisible;\n  var mergedDropdownClassName = dropdownClassName || popupClassName;\n  var mergedPlacement = placement || popupPlacement;\n  var onInternalDropdownVisibleChange = function onInternalDropdownVisibleChange(nextVisible) {\n    onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextVisible);\n    onPopupVisibleChange === null || onPopupVisibleChange === void 0 ? void 0 : onPopupVisibleChange(nextVisible);\n  };\n\n  // ========================== Warning ===========================\n  if (process.env.NODE_ENV !== 'production') {\n    warningProps(props);\n    warningNullOptions(mergedOptions, mergedFieldNames);\n  }\n\n  // ========================== Context ===========================\n  var cascaderContext = React.useMemo(function () {\n    return {\n      options: mergedOptions,\n      fieldNames: mergedFieldNames,\n      values: checkedValues,\n      halfValues: halfCheckedValues,\n      changeOnSelect: changeOnSelect,\n      onSelect: onInternalSelect,\n      checkable: checkable,\n      searchOptions: searchOptions,\n      dropdownPrefixCls: dropdownPrefixCls,\n      loadData: loadData,\n      expandTrigger: expandTrigger,\n      expandIcon: expandIcon,\n      loadingIcon: loadingIcon,\n      dropdownMenuColumnStyle: dropdownMenuColumnStyle\n    };\n  }, [mergedOptions, mergedFieldNames, checkedValues, halfCheckedValues, changeOnSelect, onInternalSelect, checkable, searchOptions, dropdownPrefixCls, loadData, expandTrigger, expandIcon, loadingIcon, dropdownMenuColumnStyle]);\n\n  // ==============================================================\n  // ==                          Render                          ==\n  // ==============================================================\n  var emptyOptions = !(mergedSearchValue ? searchOptions : mergedOptions).length;\n  var dropdownStyle =\n  // Search to match width\n  mergedSearchValue && searchConfig.matchInputWidth ||\n  // Empty keep the width\n  emptyOptions ? {} : {\n    minWidth: 'auto'\n  };\n  return /*#__PURE__*/React.createElement(CascaderContext.Provider, {\n    value: cascaderContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({}, restProps, {\n    // MISC\n    ref: ref,\n    id: mergedId,\n    prefixCls: prefixCls,\n    autoClearSearchValue: autoClearSearchValue,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownStyle: dropdownStyle\n    // Value\n    ,\n    displayValues: displayValues,\n    onDisplayValuesChange: onDisplayValuesChange,\n    mode: multiple ? 'multiple' : undefined\n    // Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    showSearch: mergedShowSearch\n    // Options\n    ,\n    OptionList: OptionList,\n    emptyOptions: emptyOptions\n    // Open\n    ,\n    open: mergedOpen,\n    dropdownClassName: mergedDropdownClassName,\n    placement: mergedPlacement,\n    onDropdownVisibleChange: onInternalDropdownVisibleChange\n    // Children\n    ,\n    getRawInputElement: function getRawInputElement() {\n      return children;\n    }\n  })));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Cascader.displayName = 'Cascader';\n}\nCascader.SHOW_PARENT = SHOW_PARENT;\nCascader.SHOW_CHILD = SHOW_CHILD;\nCascader.Panel = Panel;\nexport default Cascader;"]},"metadata":{},"sourceType":"module"}